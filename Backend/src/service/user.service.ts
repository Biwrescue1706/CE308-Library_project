import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

// ğŸ“Œ à¸”à¸¶à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¸œà¸¹à¹‰à¹ƒà¸Šà¹‰à¸—à¸±à¹‰à¸‡à¸«à¸¡à¸”
export const getAllUsers = async () => {
  return await prisma.user.findMany({ include: { address: true } });
};

// ğŸ“Œ à¸”à¸¶à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¸œà¸¹à¹‰à¹ƒà¸Šà¹‰à¸•à¸²à¸¡ ID
export const getUserById = async (id: string) => {
  return await prisma.user.findUnique({
    where: { id },
    include: { address: true },
  });
};

// ğŸ“Œ à¸”à¸¶à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¸œà¸¹à¹‰à¹ƒà¸Šà¹‰à¸•à¸²à¸¡ username (à¹ƒà¸Šà¹‰à¸ªà¸³à¸«à¸£à¸±à¸š login)
export const getUserByUsername = async (username: string) => {
  return await prisma.user.findUnique({
    where: { username },
  });
};

// ğŸ“Œ à¸ªà¸£à¹‰à¸²à¸‡à¸œà¸¹à¹‰à¹ƒà¸Šà¹‰à¹ƒà¸«à¸¡à¹ˆ
export const createUser = async (data: any) => {
  return await prisma.user.create({ data });
};

// ğŸ“Œ à¸­à¸±à¸›à¹€à¸”à¸•à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¸œà¸¹à¹‰à¹ƒà¸Šà¹‰
export const updateUser = async (id: string, data: any) => {
  return await prisma.user.update({
    where: { id },
    data,
  });
};

// ğŸ“Œ à¸¥à¸šà¸œà¸¹à¹‰à¹ƒà¸Šà¹‰
export const deleteUser = async (id: string) => {
  return await prisma.user.delete({
    where: { id },
  });
};
