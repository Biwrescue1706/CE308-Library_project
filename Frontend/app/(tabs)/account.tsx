import React, { useState, useEffect } from "react";
import { 
  View, Text, TouchableOpacity, Button, ActivityIndicator, StyleSheet 
} from "react-native";
import axios from "axios";
import Constants from "expo-constants";
import { BottomTabNavigationProp } from "@react-navigation/bottom-tabs";
import { useNavigation } from "@react-navigation/native";

const API_URL = Constants.expoConfig?.extra?.API_URL;

export default function AccountScreen() {
  const navigation = useNavigation<BottomTabNavigationProp<any>>();
  const [user, setUser] = useState<any>(null);
  const [loading, setLoading] = useState(true);

  // üìå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å API
  useEffect(() => {
    axios
      .get(`${API_URL}/user/me`)
      .then((response) => {
        setUser(response.data);
        setLoading(false);
      })
      .catch((error) => {
        console.error("‚ùå Error fetching user data:", error);
        setLoading(false);
      });
  }, []);

  // üìå ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
  const handleLogout = () => {
    axios.post(`${API_URL}/auth/logout`)
      .then(() => {
        console.log("‚úÖ Logout successful");
        // üìå ‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ navigation.replace("/login") ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login
      })
      .catch((error) => console.error("‚ùå Error logging out:", error));
  };

  return (
    <View style={styles.container}>
      <Text style={styles.header}>üë§ ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</Text>

      {loading ? (
        <ActivityIndicator size="large" color="tomato" />
      ) : (
        <>
          <Text>üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: {user?.email}</Text>
          <Text>üÜî ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: {user?.memberId}</Text>
          <Text>üë§ ‡∏ä‡∏∑‡πà‡∏≠: {user?.FNameTH} {user?.LNameTH}</Text>
          <Text>üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: {user?.phone}</Text>
          <Text>üìÖ ‡∏ß‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: {new Date(user?.joinDate).toLocaleDateString()}</Text>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ */}
          <TouchableOpacity style={styles.button} onPress={() => navigation.navigate("Inforpersonal")}>
            <Text style={styles.buttonText}>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.button} onPress={() => navigation.navigate("Contact")}>
            <Text style={styles.buttonText}>‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</Text>
          </TouchableOpacity>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö */}
          <TouchableOpacity style={[styles.button, styles.logoutButton]} onPress={handleLogout}>
            <Text style={styles.buttonText}>‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</Text>
          </TouchableOpacity>
        </>
      )}
    </View>
  );
}

// üé® **Styles (CSS)**
const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: "center",
    backgroundColor: "#f8f9fa",
    padding: 20,
    justifyContent: "center",
  },
  header: {
    fontSize: 22,
    fontWeight: "bold",
    textAlign: "center",
    marginBottom: 10,
  },
  button: {
    backgroundColor: "#007bff",
    paddingVertical: 15,
    paddingHorizontal: 40,
    borderRadius: 10,
    marginVertical: 10,
    width: 250,
    alignItems: "center",
  },
  buttonText: {
    color: "#fff",
    fontSize: 18,
    fontWeight: "bold",
  },
  logoutButton: {
    backgroundColor: "#dc3545",
  },
});
