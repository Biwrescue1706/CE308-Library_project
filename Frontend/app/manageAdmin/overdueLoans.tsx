import React, { useEffect, useState } from "react";
import {
  View,
  Text,
  ScrollView,
  StyleSheet,
} from "react-native";
import axios from "axios";
import Constants from "expo-constants";
import { useRouter } from "expo-router";

const API_URL = Constants.expoConfig?.extra?.API_URL;

export default function OverdueLoansScreen() {
  const [loans, setLoans] = useState<any[]>([]);
  const router = useRouter();

  useEffect(() => {
    axios
      .get(`${API_URL}/users/me`, { withCredentials: true })
      .then(() => {
        axios
          .get(`${API_URL}/loans/overdue`, { withCredentials: true })
          .then((res) => setLoans(res.data))
          .catch(() => {});
      })
      .catch(() => {
        router.replace("/(auth)/login");
      });
  }, []);

  return (
    <View style={styles.container}>
      <Text style={styles.header}>‚ö†Ô∏è ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô</Text>
      {/* Check if loans is empty and display the empty message */}
      {loans.length === 0 ? (
        <Text style={{ textAlign: "center", marginTop: 20 }}>
          ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏∑‡∏ô
        </Text>
      ) : (
        <ScrollView contentContainerStyle={styles.scrollContent}>
          {loans.map((loan, index) => (
            <View key={loan.id} style={styles.card}>
              <Text style={styles.titlebold}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏ó‡∏µ‡πà {index + 1}</Text>
              <Text>
                <Text style={styles.bold}>üë§ ‡∏ú‡∏π‡πâ‡∏¢‡∏∑‡∏° : </Text>{loan.username}
              </Text>
              <Text>
                <Text style={styles.bold}>üë§ ‡∏ä‡∏∑‡πà‡∏≠ : </Text>{loan.fullNameTH}
              </Text>
              <Text>
                <Text style={styles.bold}>üë§ ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å : </Text>{loan.memberId}
              </Text>
              <Text>
                <Text style={styles.bold}>üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ú‡∏π‡πâ‡∏¢‡∏∑‡∏° : </Text>{loan.phone}
              </Text>
              <Text>
                <Text style={styles.bold}>üìï ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ : </Text>{loan.bookTitle}
              </Text>
              <Text>
                <Text style={styles.bold}>üìÖ ‡∏¢‡∏∑‡∏° : </Text>{loan.loanDate}
              </Text>
              <Text>
                <Text style={styles.bold}>üìÖ ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î : </Text>{loan.dueDate}
              </Text>
              <Text>
                <Text style={styles.bold}>üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô : </Text>{loan.borrowedQuantity}{" "}
                <Text style={styles.bold}>‡πÄ‡∏•‡πà‡∏°</Text>
              </Text>
              <Text style={{ color: "red" }}>
                <Text style={styles.bold}>‚è±Ô∏è ‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î : </Text>{loan.lateDays}{" "}
                <Text style={styles.bold}>‡∏ß‡∏±‡∏ô</Text>
              </Text>
            </View>
          ))}
        </ScrollView>
      )}
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#C8E6B2",
  },
  scrollContent: {
    padding: 20,
    paddingBottom: 100,
    backgroundColor: "#C8E6B2",
  },
  header: {
    fontSize: 24,
    fontWeight: "bold",
    textAlign: "center",
    backgroundColor: "#fff",
    marginTop: 10,
    width: 325,
    height: 50,
    marginHorizontal: "auto",
    marginBottom: 10,
    borderRadius: 10,
  },
  card: {
    backgroundColor: "#fff",
    padding: 16,
    borderRadius: 10,
    marginBottom: 12,
    elevation: 2,
  },
  bold: {
    fontWeight: "bold",
  },
  titlebold: {
    fontSize: 16,
    fontWeight: "bold",
    marginBottom: 4,
    textAlign: "center",
  },
});
